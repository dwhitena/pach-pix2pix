{
  "pipeline": {
    "name": "checkpoint"
  },
  "transform": {
    "image": "dwhitena/pix2pix-pach",
    "cmd": [ 
	"python", 
	"pix2pix.py", 
	"--mode", 
	"train", 
	"--output_dir", 
	"/pfs/out", 
	"--max_epochs", 
	"2", 
	"--input_dir", 
	"/pfs/training", 
	"--which_direction", 
	"BtoA"
    ],
    "stdin": [ ],
    "overwrite": true
  },
  "parallelism_spec": {
    "strategy": "CONSTANT",
    "constant": "1"
  },
  "inputs": [
    {
      "repo": {
        "name": "training"
      },
      "method": "global"
    }
  ]
}
{
  "pipeline": {
    "name": "model"
  },
  "transform": {
    "image": "dwhitena/pix2pix-pach",
    "cmd": [ "/bin/bash" ],
    "stdin": [ 
	"sed -i 's/out/checkpoint/g' /pfs/checkpoint/checkpoint", 
	"python pix2pix.py --mode export --output_dir /pfs/out --checkpoint /pfs/checkpoint" 
    ],
    "overwrite": true
  },
  "parallelism_spec": {
    "strategy": "CONSTANT",
    "constant": "1"
  },
  "inputs": [
    {
      "repo": {
        "name": "checkpoint"
      },
      "method": "global"
    }
  ]
}
{
  "pipeline": {
    "name": "inference"
  },
  "transform": {
    "image": "dwhitena/pix2pix-pach",
    "cmd": [ "/bin/bash" ],
    "stdin": [
	"for filename in /pfs/facades/*; do",
		"rawname=$(basename $filename)",
		"python process-local.py --model_dir /pfs/model --input_file $filename --output_file /pfs/out/$basename",	
	"done"
    ]
  },
  "parallelism_spec": {
    "strategy": "CONSTANT",
    "constant": "1"
  },
  "inputs": [
    {
      "repo": {
        "name": "facades"
      }
    },
    {
      "repo": {
	"name": "model"
      },
      "method": "global"
    }
  ]
}
